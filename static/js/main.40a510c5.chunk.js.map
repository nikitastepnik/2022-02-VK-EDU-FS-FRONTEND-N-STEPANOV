{"version":3,"sources":["components/LanguageButton/LanguageButton.jsx","components/HeaderTextArea/HeaderTextArea.jsx","components/FooterTextArea/FooterTextArea.jsx","components/TextAreaBlock/TextAreaBlock.jsx","components/Title/Title.jsx","utils/insertLocalStorageHistoryValue.js","utils/insertRowToHistory.js","pages/TranslatePage/TranslatePage.jsx","components/ButtonClearHistory/ButtonClearHistory.jsx","components/HistoryRow/HistoryRow.jsx","pages/HistoryPage/HistoryPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["LanguageButton","props","language","origin","half","target","className","onClick","changeLanguage","HeaderTextArea","swapLanguages","FooterTextArea","count","TextAreaBlock","orig_val","original_value","len_input_initial","window","localStorage","getItem","useState","inputVal","updateInputVal","lenInputVal","updateLenInputVal","useEffect","length","id","action","onSubmit","event","translateMessage","name","value","swap","type","onChange","changeSwapStatus","checkInputLen","setItem","translate_value","translation_stub","Title","insertLocalStorageHistoryValue","JSON","parse","insertRowToHistory","origin_value","target_value","historyTranslations","push","String","stringify","languagesCodes","translationsStub","TranslatePage","bind","state","translate_stub","this","setState","input_length","preventDefault","body","options","method","headers","from","fetch_endpoint_url","fetch","then","response","json","translated_value","translations","text","catch","err","console","error","original_language","orig_value","to","React","Component","ButtonClearHistory","clearHistory","HistoryRow","HistoryPage","clearHistoryTranslations","map","translation","key","reverse","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.40a510c5.chunk.js","sourcesContent":["import './LanguageButton.scss'\n\nexport function LanguageButton(props) {\n    if ((props.language === props.origin && props.half === \"origin language\")\n        || (props.language === props.target && props.half === \"target language\")) {\n        return (\n            <div className={\"target-language-click\"}>\n                {props.language}\n            </div>\n        )\n    } else {\n        return (\n            <div className={\"target-language\"} onClick={() => {\n                props.changeLanguage(props.language, props.half)\n            }}>\n                {props.language}\n            </div>\n        )\n    }\n\n\n}","import './HeaderTextArea.scss'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport SyncAltIcon from '@mui/icons-material/SyncAlt';\n\nimport {LanguageButton} from \"../LanguageButton\";\n\nexport function HeaderTextArea(props) {\n    return (\n        <div className={\"text-area-header\"}>\n            <LanguageButton language={\"Detect Language\"} half={\"origin language\"}\n                            changeLanguage={props.changeLanguage} origin={props.origin}\n                            target={props.target}></LanguageButton>\n            <LanguageButton language={\"English\"} half={\"origin language\"}\n                            changeLanguage={props.changeLanguage} origin={props.origin}\n                            target={props.target}></LanguageButton>\n            <LanguageButton language={\"Russian\"} half={\"origin language\"}\n                            changeLanguage={props.changeLanguage} origin={props.origin}\n                            target={props.target}></LanguageButton>\n            <LanguageButton language={\"German\"} half={\"origin language\"}\n                            changeLanguage={props.changeLanguage} origin={props.origin}\n                            target={props.target}></LanguageButton>\n            <ExpandMoreIcon className={\"arrow-down\"}></ExpandMoreIcon>\n            <SyncAltIcon className={\"arrow-revert\"} onClick={() => props.swapLanguages()}></SyncAltIcon>\n            <LanguageButton language={\"Russian\"} half={\"target language\"}\n                            changeLanguage={props.changeLanguage} origin={props.origin}\n                            target={props.target}></LanguageButton>\n            <LanguageButton language={\"German\"} half={\"target language\"}\n                            changeLanguage={props.changeLanguage} origin={props.origin}\n                            target={props.target}></LanguageButton>\n            <LanguageButton language={\"English\"} half={\"target language\"}\n                            changeLanguage={props.changeLanguage} origin={props.origin}\n                            target={props.target}></LanguageButton>\n            <ExpandMoreIcon className={\"arrow-down\"}></ExpandMoreIcon>\n        </div>\n    )\n}","import './FooterTextArea.scss'\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\nimport KeyboardIcon from '@mui/icons-material/Keyboard';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nexport function FooterTextArea(props) {\n    return (\n        <div className={\"footer-original-language\"}>\n            <KeyboardVoiceIcon className={\"microphone\"}></KeyboardVoiceIcon>\n            <div className={\"sum-container\"}>\n                <div>{props.count + \"/5000\"}</div>\n                <KeyboardIcon className={\"keyboard\"}></KeyboardIcon>\n                <ArrowDropDownIcon className={\"arrow-down\"}></ArrowDropDownIcon>\n            </div>\n        </div>\n    )\n\n}","import './TextAreaBlock.scss'\nimport {HeaderTextArea} from \"../HeaderTextArea\";\nimport {FooterTextArea} from \"../FooterTextArea\";\nimport {useEffect, useState} from \"react\";\n\nexport function TextAreaBlock(props) {\n    const orig_val = props.original_value ? props.original_value : \"\"\n    const len_input_initial = window.localStorage.getItem(\"length_input_value\") ? window.localStorage.getItem(\"length_input_value\")\n        : 0\n    const [inputVal, updateInputVal] = useState(orig_val)\n    const [lenInputVal, updateLenInputVal] = useState(len_input_initial)\n\n    useEffect(() => {\n        if (props.original_value) {\n            updateLenInputVal(props.original_value.length)\n        }\n    }, [props.original_value])\n\n    return (\n        <div className={\"summary-container\"}>\n            <HeaderTextArea changeLanguage={props.changeLanguage} target={props.target}\n                            origin={props.origin} swapLanguages={props.swapLanguages}></HeaderTextArea>\n            <div className={\"blocks-container\"}>\n                <div className={\"translate-block-container\"} id={\"first-container\"}>\n                    <form className=\"translate-form\" action=\"/\" onSubmit={(event) =>\n                        props.translateMessage(event, props.target)\n                    }>\n                        <input className=\"form-input\" name=\"message-text\"\n                               value={props.swap ? (props.original_value ? props.original_value :\n                                       window.localStorage.getItem(\"original value\"))\n                                   : inputVal}\n                               type=\"text\"\n                               onChange={(event) => {\n                                   props.changeSwapStatus()\n                                   updateInputVal(event.target.value)\n                                   props.checkInputLen(event.target.value.length)\n                                   window.localStorage.setItem(\"length_input_value\", event.target.value.length)\n                                   window.localStorage.setItem(\"original value\", event.target.value)\n                                   updateLenInputVal(event.target.value.length)\n                               }\n                               }\n                        />\n\n                    </form>\n                    <FooterTextArea count={lenInputVal}></FooterTextArea>\n                </div>\n                <div className={\"translate-block-container\"} id={\"second-container\"}>\n                    <div className=\"translate-form\">\n                        {props.translate_value ?\n                            <div className=\"form-input\" id={\"output-res-exists\"}>\n                                {props.translate_value}\n                            </div> : <div className=\"form-input\" id={\"output-res-non-exists\"}>\n                                {props.translation_stub}\n                            </div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","import './Title.scss'\nimport TranslateIcon from '@mui/icons-material/Translate';\n\nexport function Title(props) {\n    if (props.type === \"translate-header\") {\n        return (\n            <div className={\"background-phone\"}>\n                <div className={\"title\"}>VK Translate</div>\n                <div className={\"translate-icon-container\"}><TranslateIcon></TranslateIcon>Text</div>\n            </div>\n        )\n    } else if (props.type === \"history-header\") {\n        return (\n            <div className={\"header-history\"}>\n                <div className={\"history-title\"}>History</div>\n            </div>\n        )\n    }\n}\n\n","export function insertLocalStorageHistoryValue() {\n    return window.localStorage.getItem(\"history\") ?\n        JSON.parse(window.localStorage.getItem(\"history\"))\n        : []\n}","import {insertLocalStorageHistoryValue} from \"./insertLocalStorageHistoryValue\";\n\nexport function insertRowToHistory(origin, target, origin_value, target_value) {\n    let historyTranslations = insertLocalStorageHistoryValue()\n\n    historyTranslations.push({\n        \"origin\": origin, \"target\": target,\n        \"origin_value\": origin_value, \"target_value\": target_value\n    })\n\n    window.localStorage.setItem(String(\"history\"), JSON.stringify(historyTranslations))\n}","import './TranslatePage.scss'\nimport React from \"react\";\nimport {TextAreaBlock} from \"../../components/TextAreaBlock/TextAreaBlock\";\nimport HistoryIcon from \"@mui/icons-material/History\";\nimport {Title} from \"../../components/Title\";\nimport {Link} from \"react-router-dom\";\nimport {insertRowToHistory} from \"../../utils/insertRowToHistory\";\n\nconst languagesCodes = {\n    \"Russian\": \"ru\",\n    \"German\": \"de\",\n    \"English\": \"en\"\n}\n\nconst translationsStub = {\n    \"Russian\": \"Перевод\",\n    \"English\": \"Translate\",\n    \"German\": \"Übersetzung\",\n    \"Spanish\": \"Traducción\"\n}\n\nexport class TranslatePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.translateMessage = this.translateMessage.bind(this)\n        this.changeLanguage = this.changeLanguage.bind(this)\n        this.checkInputLen = this.checkInputLen.bind(this)\n        this.swapLanguages = this.swapLanguages.bind(this)\n        this.changeSwapStatus = this.changeSwapStatus.bind(this)\n\n        this.state = {\n            origin: window.localStorage.getItem(\"origin language\"),\n            target: window.localStorage.getItem(\"target language\"),\n            original_value: window.localStorage.getItem(\"original value\"),\n            translate_value: window.localStorage.getItem(\"translate value\"),\n            translate_stub: translationsStub[window.localStorage.getItem(\"target language\")],\n            swap: false\n        }\n    }\n\n\n    changeLanguage(language, half) {\n        if (half === \"origin language\") {\n            this.setState(\n                {\n                    origin: language\n                }\n            )\n            window.localStorage.setItem(\"origin language\", language)\n        } else {\n            if (language === this.state.origin) {\n                return\n            }\n            this.setState(\n                {\n                    target: language,\n                    translate_stub: translationsStub[language]\n                }\n            )\n            window.localStorage.setItem(\"target language\", language)\n            this.translateMessage(null, language)\n        }\n\n    }\n\n    checkInputLen(input_length) {\n        if (input_length === 0) {\n            window.localStorage.setItem(\"original value\", \"\")\n            window.localStorage.setItem(\"translate value\", \"\")\n            this.setState({\n                translate_value: null,\n                original_value: null\n            })\n        }\n    }\n\n    translateMessage(event, language = \"English\") {\n        if (event) {\n            event.preventDefault()\n        }\n        if (event || this.state.original_value) {\n            let translate_value = event ? event.target[0].value : this.state.original_value\n            window.localStorage.setItem(\"original value\", translate_value)\n            this.setState({\n                original_value: translate_value,\n                translate_value: \"...\"\n            })\n            let body = [{\"Text\": translate_value}]\n            const options = {\n                method: 'POST',\n                headers: {\n                    'content-type': 'application/json',\n                    'X-RapidAPI-Key': 'df5ffa97f3mshfa5277882376ad1p1db7b7jsnb69ba524116a',\n                    'X-RapidAPI-Host': 'microsoft-translator-text.p.rapidapi.com'\n                },\n                body: JSON.stringify(body)\n            };\n            let from = languagesCodes[this.state.origin] ? languagesCodes[this.state.origin] : ''\n            const fetch_endpoint_url = 'https://microsoft-translator-text.p.rapidapi.com/translate?to%5B0%5D='\n                + languagesCodes[language] + '&api-' +\n                'version=3.0&from=' + from + '&profanityAction=NoAction&textType=plain'\n            fetch(fetch_endpoint_url, options)\n                .then(response => response.json())\n                .then(response => {\n                    let translated_value = response[0].translations[0].text\n                    window.localStorage.setItem(\"translate value\", translated_value)\n                    this.setState({\n                        translate_value: translated_value\n                    })\n                    insertRowToHistory(this.state.origin, this.state.target, translate_value, translated_value)\n                })\n                .catch(err => console.error(err));\n        }\n\n\n    }\n\n    swapLanguages() {\n        let original_language = this.state.origin\n        if (original_language === \"Detect Language\") {\n            return\n        }\n        let orig_value = this.state.original_value\n        this.setState({\n            origin: this.state.target,\n            target: original_language,\n            original_value: this.state.translate_value,\n            translate_value: orig_value,\n            translate_stub: translationsStub[original_language],\n            swap: true\n        })\n    }\n\n\n    changeSwapStatus() {\n        this.setState({\n            swap: false\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"area-translate-page-container\"}>\n                <Title type={\"translate-header\"}></Title>\n                <TextAreaBlock translateMessage={this.translateMessage} changeLanguage={this.changeLanguage}\n                               target={this.state.target}\n                               origin={this.state.origin} original_value={this.state.original_value}\n                               translate_value={this.state.translate_value} checkInputLen={this.checkInputLen}\n                               translation_stub={this.state.translate_stub}\n                               swapLanguages={this.swapLanguages}\n                               changeSwapStatus={this.changeSwapStatus}\n                               swap={this.state.swap}>\n                </TextAreaBlock>\n                <div className={\"history-container\"}>\n                    <Link className={\"link-history-icon\"} to={\"/history\"}>\n                        <HistoryIcon className={\"history-icon\"}>\n                        </HistoryIcon>\n                        <div className={\"history-text\"}>История</div>\n                    </Link>\n                </div>\n            </div>\n\n        )\n    }\n}","import './ButtonClearHistory.scss'\n\nexport function ButtonClearHistory(props) {\n    return (\n        <div className={\"button-clear-container\"}>\n            <div className={\"button-clear-text\"} onClick={() => {\n                props.clearHistory()\n            }}>Clear History\n            </div>\n        </div>\n    )\n}","import \"./HistoryRow.scss\"\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\n\n\nexport function HistoryRow(props) {\n    return (\n        <div className={\"container-history-row\"}>\n            <div className={\"languages-container\"}>\n                {props.origin}\n                <ArrowRightAltIcon></ArrowRightAltIcon>\n                {props.target}\n            </div>\n            <div className={\"translations-container\"}>\n                <div className={\"origin-value\"}>{props.origin_value}</div>\n                <div className={\"translate-value\"}>{props.target_value}</div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\n\nimport './HistoryPage.scss'\nimport {Title} from \"../../components/Title\";\nimport {ButtonClearHistory} from \"../../components/ButtonClearHistory\";\nimport {HistoryRow} from \"../../components/HistoryRow\";\nimport {insertLocalStorageHistoryValue} from \"../../utils/insertLocalStorageHistoryValue\";\n\nexport class HistoryPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.clearHistoryTranslations = this.clearHistoryTranslations.bind(this)\n        this.state = {\n            translations: insertLocalStorageHistoryValue()\n        }\n    }\n\n\n    clearHistoryTranslations() {\n        window.localStorage.setItem(\"history\", [])\n        this.setState({\n            translations: []\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"area-history-page-container\"}>\n                <Title type={\"history-header\"}></Title>\n                <ButtonClearHistory clearHistory={this.clearHistoryTranslations}></ButtonClearHistory>\n                <div className={\"summary-container-history-rows\"}>\n                    {\n                        this.state.translations ? this.state.translations.map((translation, key) => (\n                            <HistoryRow\n                                key={key}\n                                origin={translation.origin}\n                                target={translation.target}\n                                origin_value={translation.origin_value}\n                                target_value={translation.target_value}\n                            ></HistoryRow>)).reverse() : null\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import './App.css';\nimport React from 'react';\nimport {HashRouter as Router, Navigate, Route, Routes} from \"react-router-dom\";\nimport {TranslatePage} from \"./pages/TranslatePage\";\nimport {HistoryPage} from \"./pages/HistoryPage\"\n\nexport class App extends React.Component {\n    componentDidMount() {\n        if (!window.localStorage.getItem(\"origin language\")) {\n            window.localStorage.setItem(\"origin language\", \"English\")\n        }\n        if (!window.localStorage.getItem(\"target language\")) {\n            window.localStorage.setItem(\"target language\", \"Russian\")\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <main>\n                        <Routes>\n                            <Route path='*' element={<Navigate to=\"translate\"/>}/>\n                            <Route path={\"translate\"} element={<TranslatePage></TranslatePage>}></Route>\n                            <Route path={\"history\"} element={<HistoryPage></HistoryPage>}></Route>\n                        </Routes>\n                    </main>\n                </div>\n            </Router>\n        )\n    }\n\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}